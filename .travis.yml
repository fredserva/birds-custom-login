# Tell Travis CI we're using PHP
language: php

# Versions of PHP to test against
php:
    - hhvm
    - 7.0
    - 5.6
    - 5.5
    - 5.4

# Specify versions of WordPress to test against
# WP_VERSION = WordPress version number (use "master" for SVN trunk)
# WP_MULTISITE = whether to test multisite (use either "0" or "1")
env:
    - WP_VERSION=master WP_MULTISITE=0
    - WP_VERSION=4.3 WP_MULTISITE=0
    - WP_VERSION=4.2 WP_MULTISITE=0
    - WP_VERSION=4.1 WP_MULTISITE=0
    - WP_VERSION=4.0 WP_MULTISITE=0

matrix:
    allow_failures:
        - php: 7.0
        - php: hhvm

# Grab the setup script and execute
before_script:
    # Set up WordPress installation.
    - export WP_DEVELOP_DIR=/tmp/wordpress/
    - mkdir -p $WP_DEVELOP_DIR
    # Use the Git mirror of WordPress.
    - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ $WP_DEVELOP_DIR
    # Set up plugin information.
    - plugin_slug=$(basename $(pwd))
    - plugin_dir=$WP_DEVELOP_DIR/src/wp-content/plugins/$plugin_slug
    - cd ..
    - mv $plugin_slug $plugin_dir
    # Set up WordPress configuration.
    - cd $WP_DEVELOP_DIR
    - echo $WP_DEVELOP_DIR
    - cp wp-tests-config-sample.php wp-tests-config.php
    - sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
    - sed -i "s/yourusernamehere/root/" wp-tests-config.php
    - sed -i "s/yourpasswordhere//" wp-tests-config.php
    # Create WordPress database.
    - mysql -e 'CREATE DATABASE wordpress_test;' -uroot
    # Install CodeSniffer for WordPress Coding Standards checks.
    - git clone https://github.com/squizlabs/PHP_CodeSniffer.git php-codesniffer
    # Install WordPress Coding Standards.
    - git clone https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git wordpress-coding-standards
    # Hop into CodeSniffer directory.
    - cd php-codesniffer
    # Set install path for WordPress Coding Standards.
    - scripts/phpcs --config-set installed_paths ../wordpress-coding-standards
    # Hop into plugins directory.
    - cd $PLUGIN_DIR
    # After CodeSniffer install you should refresh your path.
    - phpenv rehash

script:
    # Search for PHP syntax errors.
    - find . \( -name '*.php' \) -exec php -lf {} \;
    - $WP_DEVELOP_DIR/php-codesniffer/scripts/phpcs -s -n . --standard=./codesniffer.ruleset.xml --extensions=php

notifications:
    on_success: never
    on_failure: change
